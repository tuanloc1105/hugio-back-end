apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-service
spec:
  selector:
    matchLabels:
      app: user-service
  replicas: 1
  template:
    metadata:
      labels:
        app: user-service
    spec:
      volumes:
        - name: log
          emptyDir: {}
      containers:
        - name: user-service
          volumeMounts:
            - mountPath: /app/data/log
              name: log
          image: tuanloc/project:user-service
          imagePullPolicy: Always
          ports:
            - containerPort: 8010
            - containerPort: 9010
          env:
            - name: APPLICATION_NAME
              value: "user-service"
            - name: LOG_FILE_NAME
              value: "user-service"
            - name: MYSQL_DB_URL
              value: "jdbc:mysql://host.docker.internal:3306/tdtu_user_db?createDatabaseIfNotExist=true&allowPublicKeyRetrieval=true&useSSL=false"
            - name: MYSQL_DB_USERNAME
              value: "root"
            - name: MYSQL_DB_PASSWORD
              value: "tyZnEfTQhn"
            - name: GRPC_AUTH_SERVER
              value: auth-service-svc-2:9000
#  kubectl apply -f deploy.yml -n ingress-nginx
#  kubectl delete -f deploy.yml -n ingress-nginx
---
apiVersion: v1
kind: Service
metadata:
  name: user-service-svc-1
  labels:
    app: user-service
spec:
  type: NodePort
  selector:
    app: user-service
  ports:
    - protocol: "TCP"
      name: http
      port: 8010
      targetPort: 8010
---
apiVersion: v1
kind: Service
metadata:
  name: user-service-svc-2
  labels:
    app: user-service
spec:
  clusterIP: None
  selector:
    app: user-service
  ports:
    - port: 9010
      targetPort: 9010
